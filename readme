# Projeto Escola

Este projeto é um sistema de gerenciamento de alunos, cursos e notas para a escola. Ele envolve a criação de um banco de dados para gerenciar informações sobre alunos, cursos e as notas dos alunos nos cursos.

## Estrutura do Banco de Dados

O banco de dados é composto pelas seguintes tabelas:

1. **Alunos**
   - `id_aluno` (INT, AUTO_INCREMENT, PRIMARY KEY): Identificador único do aluno.
   - `nome` (VARCHAR(100)): Nome do aluno.
   - `data_nascimento` (DATE): Data de nascimento do aluno.
   - `endereco` (VARCHAR(100)): Endereço do aluno.

2. **Cursos**
   - `id_curso` (INT, AUTO_INCREMENT, PRIMARY KEY): Identificador único do curso.
   - `nome_curso` (VARCHAR(100)): Nome do curso.
   - `descricao` (VARCHAR(200)): Descrição do curso.

3. **Notas**
   - `id_nota` (INT, AUTO_INCREMENT, PRIMARY KEY): Identificador único da nota.
   - `id_aluno` (INT): Referência ao aluno.
   - `id_curso` (INT): Referência ao curso.
   - `nota` (FLOAT): Nota do aluno no curso.

## Scripts SQL

Os scripts SQL abaixo foram criados para definir o esquema do banco de dados e realizar operações de inserção, consulta, atualização e exclusão de dados.

### Criação do Banco de Dados e Tabelas

```sql
DROP DATABASE IF EXISTS Escola;

CREATE DATABASE Escola;
USE Escola;

CREATE TABLE Alunos(
    id_aluno INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    data_nascimento DATE NOT NULL,
    endereco VARCHAR(100)
);

CREATE TABLE Cursos(
    id_curso INT AUTO_INCREMENT PRIMARY KEY,
    nome_curso VARCHAR(100) NOT NULL,
    descricao VARCHAR(200)
);

CREATE TABLE Notas(
    id_nota INT AUTO_INCREMENT PRIMARY KEY,
    id_aluno INT,
    id_curso INT,
    nota FLOAT NOT NULL,
    FOREIGN KEY (id_aluno) REFERENCES Alunos(id_aluno),
    FOREIGN KEY (id_curso) REFERENCES Cursos(id_curso)
);
INSERT INTO Alunos(nome, data_nascimento, endereco) VALUES
('Alice Moura', '2006-11-30', 'Rua I,1438'),
('Betina Santos', '2007-08-22', 'Rua A,1438'),
('Felipe Neto', '2008-12-24', 'Rua B,1438');

INSERT INTO Cursos(nome_curso, descricao) VALUES
('Linguas estrangeiras', 'ensina ingles e espanol'),
('Ciencia de dados', 'analisa dados com meios de programação'),
('Administração', 'ensina gerenciar recursos dentro de organizações');

INSERT INTO Notas (id_aluno, id_curso, nota) VALUES
(1, 1, 8.0),
(2, 2, 9.0),
(3, 3, 10.0);
SELECT
    Alunos.nome AS Aluno,
    Cursos.nome_curso AS Curso,
    Notas.nota AS Nota
FROM Notas
JOIN Alunos ON Notas.id_aluno = Alunos.id_aluno
JOIN Cursos ON Notas.id_curso = Cursos.id_curso;
SELECT
    Cursos.nome_curso AS Curso,
    AVG(Notas.nota) AS MediaNota
FROM Notas
JOIN Cursos ON Notas.id_curso = Cursos.id_curso
GROUP BY Cursos.nome_curso;
WITH MaiorNotaPorCurso AS (
    SELECT id_curso, MAX(nota) AS MaiorNota
    FROM Notas
    GROUP BY id_curso
)
SELECT
    Cursos.nome_curso AS Curso,
    Alunos.nome AS Aluno,
    MaiorNotaPorCurso.MaiorNota
FROM MaiorNotaPorCurso
JOIN Cursos ON MaiorNotaPorCurso.id_curso = Cursos.id_curso
JOIN Notas ON MaiorNotaPorCurso.id_curso = Notas.id_curso
    AND MaiorNotaPorCurso.MaiorNota = Notas.nota
JOIN Alunos ON Notas.id_aluno = Alunos.id_aluno;
UPDATE Notas
SET nota = 8.5
WHERE id_aluno = 1 AND id_curso = 1;

UPDATE Alunos
SET endereco = 'Rua I,1438'
WHERE id_aluno = 1;
DELETE FROM Notas
WHERE id_aluno = 1;

DELETE FROM Alunos
WHERE id_aluno = 1;

DELETE FROM Notas
WHERE id_curso = 1;

DELETE FROM Cursos
WHERE id_curso = 1;
Observações
Certifique-se de executar os scripts na ordem correta.
Verifique a existência das tabelas e a integridade dos dados ao executar as consultas e operações.
Licença
Este projeto está licenciado sob a Licença XYZ.
